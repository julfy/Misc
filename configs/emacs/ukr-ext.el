;;; ukr-ext.el --- Quail package for extended inputting Cyrillic characters
(require 'quail)

(quail-define-package
 "ukrainian-computer-ext" "Ukrainian" "UK" nil
 "$,1(9(F(C(:(5(=(B Ukrainian (Unicode-based for use with KOI8-U encoding)."
 nil t t t t nil nil nil nil nil t)

(quail-define-rules
 ("1" ?1)
 ("2" ?2)
 ("3" ?3)
 ("4" ?4)
 ("5" ?5)
 ("6" ?6)
 ("7" ?7)
 ("8" ?8)
 ("9" ?9)
 ("0" ?0)
 ("-" ?-)
 ("=" ?=)
 ("`" ?')
 ("`u" ?$,1)Q(B)
 ("`U" ?$,1)P(B)
 ("q" ?$,1(Y(B)
 ("w" ?$,1(f(B)
 ("e" ?$,1(c(B)
 ("r" ?$,1(Z(B)
 ("t" ?$,1(U(B)
 ("y" ?$,1(](B)
 ("u" ?$,1(S(B)
 ("i" ?$,1(h(B)
 ("o" ?$,1(i(B)
 ("p" ?$,1(W(B)
 ("[" ?$,1(e(B)
 ("[[" ?[)
 ("]" ?$,1(w(B)
 ("]]]" ?])
 ("a" ?$,1(d(B)
 ("s" ?$,1(v(B)
 ("d" ?$,1(R(B)
 ("f" ?$,1(P(B)
 ("g" ?$,1(_(B)
 ("h" ?$,1(`(B)
 ("j" ?$,1(^(B)
 ("k" ?$,1([(B)
 ("l" ?$,1(T(B)
 (";" ?$,1(V(B)
 ("'" ?$,1(t(B)
 ("z" ?$,1(o(B)
 ("x" ?$,1(g(B)
 ("c" ?$,1(a(B)
 ("v" ?$,1(\(B)
 ("b" ?$,1(X(B)
 ("n" ?$,1(b(B)
 ("m" ?$,1(l(B)
 ("," ?$,1(Q(B)
 ("." ?$,1(n(B)
 ("/" ?.)
 ("!" ?!)
 ("@" ?\")
 ("#" ?$,1uV(B)
 ("$" ?\;)
 ("%" ?%)
 ("^" ?:)
 ("&" ??)
 ("*" ?*)
 ("(" ?()
 (")" ?))
 ("_" ?_)
 ("+" ?+)
 ("~" ?')
 ("Q" ?$,1(9(B)
 ("W" ?$,1(F(B)
 ("E" ?$,1(C(B)
 ("R" ?$,1(:(B)
 ("T" ?$,1(5(B)
 ("Y" ?$,1(=(B)
 ("U" ?$,1(3(B)
 ("I" ?$,1(H(B)
 ("O" ?$,1(I(B)
 ("P" ?$,1(7(B)
 ("{" ?$,1(E(B)
 ("{{" ?{)
 ("}" ?$,1('(B)
 ("}}" ?})
 ("A" ?$,1(D(B)
 ("S" ?$,1(&(B)
 ("D" ?$,1(2(B)
 ("F" ?$,1(0(B)
 ("G" ?$,1(?(B)
 ("H" ?$,1(@(B)
 ("J" ?$,1(>(B)
 ("K" ?$,1(;(B)
 ("L" ?$,1(4(B)
 (":" ?$,1(6(B)
 ("\"" ?$,1($(B)
 ("Z" ?$,1(O(B)
 ("X" ?$,1(G(B)
 ("C" ?$,1(A(B)
 ("V" ?$,1(<(B)
 ("B" ?$,1(8(B)
 ("N" ?$,1(B(B)
 ("M" ?$,1(L(B)
 ("<" ?$,1(1(B)
 ("<<" ?<)
 (">" ?$,1(N(B)
 (">>" ?>)
 ("?" ?,)
 ("\\" ?\\)
 ("|" ?|))

;; Local Variables:
;; coding: iso-2022-7bit
;; End:

